name: 03 - Manually create the Coffee-App environment

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment in which to deploy the coffee-app-specific environment resources.'
        required: true
        default: 'staging'
jobs:
  deploy-messaging-stack:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy messaging stack
        run: npm run messaging:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-database-stack:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy database stack
        run: npm run database:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-cognito-stack:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy Cognito stack
        run: npm run cognito:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-activemq-stack:
    runs-on: ubuntu-latest
    name: Deploy the ActiveMq stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy ActiveMq stack
        run: npm run activeMq:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-sequencer-lambda:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install CDK dependencies
        run: npm install

      - name: NPM install Deployment Sequencer dependencies
        run: npm install

      - name: Build Deployment Sequencer
        run: npm run dist

      - name: Deploy Deployment Sequencer
        run: npm run deployment-sequencer:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c githubToken=${{ secrets.GH_API_TOKEN }}

  deploy-monitoring-stack:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy Monitoring stack
        run: npm run monitoring:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-canary-stack:
    runs-on: ubuntu-latest
    name: Deploy the Canary stack
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: NPM install
        run: npm install

      - name: Deploy Canary stack
        run: npm run canary:deploy -- -c environmentName=${{ github.event.inputs.environmentName }} -c canaryUserPassword=${{ secrets.CANARY_USER_PASSWORD }}
